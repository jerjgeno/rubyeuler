# Even Fibonacci numbers
# Problem 2 
# Each new term in the Fibonacci sequence is generated by adding the previous 
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed 
# four million, find the sum of the even-valued terms.

max = 4000000

def fib(n)
  if n<0
    return 0
  end
  if n==0
    return 1
  end
  if n==1
    return 2
  end
  return fib(n-2) + fib(n-1)
end

start = Time.now()
counter = 0
sum = 0
latest = 0
while
  latest = fib(counter)
  break if latest > max
  sum += latest if latest%2==0 #only even numbers
  counter +=1
end
puts sum
finish = Time.now()
puts "#{finish - start} seconds elapsed..."
  
